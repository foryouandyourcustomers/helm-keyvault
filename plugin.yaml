name: "keyvault"
version: "0.0.1"
usage: "Azure Keyvault plugin to retrieve and write values from azure keyvault"
description: |-
    A small little downloader plugin to retrieve values files from azure keyvault.
    
    This allows to render helm charts with secret values if no other possibility to retrieve secrets
    are given, e.g. when bootstrapping a cluster and no secret csi is available.
    
    Here a short example to retrieve the secret `argocd-yaml` in the keyvault `helm-keyvault-test`.
    
    First, create a base64 encoded values.yaml file in the azure keyvault
    ```bash
    # first create an azure keyvault secret
    yaml=$(cat <<'EOF' | base64
    argocd:
      git:
        sshkey: ssh-rsa mysupersecretprivatersarepositorykey
      EOF
    )
    
    az keyvault secret set --name argocd.yaml --vault-name helm-keyvault-test --value $yaml --encoding base64
    ```
    
    You can also use the helm-keyvault utility to write the secret
    ```bash
    cat <<'EOF' > /tmp/values.yaml
    argocd:
      git:
        sshkey: ssh-rsa mysupersecretprivatersarepositorykey
    EOF
    
    helm keyvault secret put --file /tmp/values.yaml --id keyvault+secret://helm-keyvault-test.vault.azure.net/secrets/argocd-yaml
    ```
    
    Next use the keyvault plugin to retrieve the generated secret during helm execution by defining
    keyvault+secret://` as url for the values file.
    
    ```bash
    # downlaod the latest secret
    --values keyvault+secret://helm-keyvault-test.vault.azure.net/secrets/argocd-yaml
    # downlaod the secret with a specific verion
    --values keyvault+secret://helm-keyvault-test.vault.azure.net/secrets/argocd-yaml/2d6e0430c0724ad1bdc277af8b549c57
    ```

useTunnel: false
ignoreFlags: false
command: "$HELM_PLUGIN_DIR/helm-keyvault"

downloaders:
  - command: "helm-keyvault secret download"
    protocols:
      - "keyvault+secret"
